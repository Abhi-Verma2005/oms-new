version: '3.8'

services:
  # OMS Next.js Application
  nextjs-app:
    build: 
      context: ./oms-new
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_URL=${AUTH_URL}
      - AUTH_RATE_LIMIT_MAX=${AUTH_RATE_LIMIT_MAX}
      - AUTH_RATE_LIMIT_WINDOW=${AUTH_RATE_LIMIT_WINDOW}
      - AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
      - AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
      - NEXT_PUBLIC_GEMINI_API_KEY=${NEXT_PUBLIC_GEMINI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - WS_PORT=${WS_PORT}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_CURRENCY=${STRIPE_CURRENCY}
      - NEXT_PUBLIC_WEBSOCKET_URL=${NEXT_PUBLIC_WEBSOCKET_URL}
      - NEXT_PUBLIC_AUTH_URL=${NEXT_PUBLIC_AUTH_URL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - JWT_SECRET=${JWT_SECRET}
      - OPEN_AI_KEY=${OPEN_AI_KEY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/hello"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # WordPress Landing Page
  wordpress:
    build: 
      context: ./oms-landing
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: wordpress-db:3306
      WORDPRESS_DB_USER: ${WP_DB_USER:-stellar_user}
      WORDPRESS_DB_PASSWORD: ${WP_DB_PASSWORD:-stellar_password}
      WORDPRESS_DB_NAME: ${WP_DB_NAME:-stellar_wp}
      WORDPRESS_DEBUG: ${WP_DEBUG:-0}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_REDIS_HOST', 'wordpress-redis');
        define('WP_REDIS_PORT', 6379);
        define('WP_REDIS_DATABASE', 0);
    volumes:
      - ./oms-landing/wordpress:/var/www/html
      - ./oms-landing/docker/wordpress/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    depends_on:
      - wordpress-db
      - wordpress-redis
    restart: unless-stopped
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # WordPress Database
  wordpress-db:
    image: mysql:8.0
    container_name: wordpress_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${WP_DB_NAME:-stellar_wp}
      MYSQL_USER: ${WP_DB_USER:-stellar_user}
      MYSQL_PASSWORD: ${WP_DB_PASSWORD:-stellar_password}
      MYSQL_ROOT_PASSWORD: ${WP_DB_ROOT_PASSWORD:-root_password}
    volumes:
      - wordpress_db_data:/var/lib/mysql
      - ./oms-landing/docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - app-network
    command: '--default-authentication-plugin=mysql_native_password'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # WordPress Redis Cache
  wordpress-redis:
    image: redis:7-alpine
    container_name: wordpress_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - wordpress_redis_data:/data
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # phpMyAdmin for WordPress (optional)
  wordpress-phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: wordpress_phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: wordpress-db
      PMA_USER: ${WP_DB_USER:-stellar_user}
      PMA_PASSWORD: ${WP_DB_PASSWORD:-stellar_password}
    depends_on:
      - wordpress-db
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Unified Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-unified.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - nextjs-app
      - wordpress
    restart: unless-stopped
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

networks:
  app-network:
    driver: bridge

volumes:
  wordpress_data:
    driver: local
  wordpress_db_data:
    driver: local
  wordpress_redis_data:
    driver: local
  nginx_ssl:
    driver: local
